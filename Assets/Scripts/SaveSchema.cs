// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace elusivenWorks
{

using global::System;
using global::FlatBuffers;

public enum Data : byte
{
 NONE = 0,
 InitialConnectCommand = 1,
 MovementCommand = 2,
 MeetCommand = 3,
 TransferPlayerCommand = 4,
 PlayerInfo = 5,
};

public struct Vec3 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Vec3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }

  public static Offset<Vec3> CreateVec3(FlatBufferBuilder builder, float X, float Y, float Z) {
    builder.Prep(4, 12);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<Vec3>(builder.Offset);
  }
};

public struct Qua : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Qua __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float X { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public float Y { get { return __p.bb.GetFloat(__p.bb_pos + 4); } }
  public float Z { get { return __p.bb.GetFloat(__p.bb_pos + 8); } }
  public float W { get { return __p.bb.GetFloat(__p.bb_pos + 12); } }

  public static Offset<Qua> CreateQua(FlatBufferBuilder builder, float X, float Y, float Z, float W) {
    builder.Prep(4, 16);
    builder.PutFloat(W);
    builder.PutFloat(Z);
    builder.PutFloat(Y);
    builder.PutFloat(X);
    return new Offset<Qua>(builder.Offset);
  }
};

public struct InitialConnectCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static InitialConnectCommand GetRootAsInitialConnectCommand(ByteBuffer _bb) { return GetRootAsInitialConnectCommand(_bb, new InitialConnectCommand()); }
  public static InitialConnectCommand GetRootAsInitialConnectCommand(ByteBuffer _bb, InitialConnectCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public InitialConnectCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (PlayerInfo?)(new PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<InitialConnectCommand> CreateInitialConnectCommand(FlatBufferBuilder builder,
      Offset<PlayerInfo> playerOffset = default(Offset<PlayerInfo>)) {
    builder.StartObject(1);
    InitialConnectCommand.AddPlayer(builder, playerOffset);
    return InitialConnectCommand.EndInitialConnectCommand(builder);
  }

  public static void StartInitialConnectCommand(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<PlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static Offset<InitialConnectCommand> EndInitialConnectCommand(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<InitialConnectCommand>(o);
  }
};

public struct MovementCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MovementCommand GetRootAsMovementCommand(ByteBuffer _bb) { return GetRootAsMovementCommand(_bb, new MovementCommand()); }
  public static MovementCommand GetRootAsMovementCommand(ByteBuffer _bb, MovementCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MovementCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (PlayerInfo?)(new PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<MovementCommand> CreateMovementCommand(FlatBufferBuilder builder,
      Offset<PlayerInfo> playerOffset = default(Offset<PlayerInfo>)) {
    builder.StartObject(1);
    MovementCommand.AddPlayer(builder, playerOffset);
    return MovementCommand.EndMovementCommand(builder);
  }

  public static void StartMovementCommand(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<PlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static Offset<MovementCommand> EndMovementCommand(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MovementCommand>(o);
  }
};

public struct MeetCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MeetCommand GetRootAsMeetCommand(ByteBuffer _bb) { return GetRootAsMeetCommand(_bb, new MeetCommand()); }
  public static MeetCommand GetRootAsMeetCommand(ByteBuffer _bb, MeetCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MeetCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PlayerInfo? OtherPlayer { get { int o = __p.__offset(4); return o != 0 ? (PlayerInfo?)(new PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<MeetCommand> CreateMeetCommand(FlatBufferBuilder builder,
      Offset<PlayerInfo> otherPlayerOffset = default(Offset<PlayerInfo>)) {
    builder.StartObject(1);
    MeetCommand.AddOtherPlayer(builder, otherPlayerOffset);
    return MeetCommand.EndMeetCommand(builder);
  }

  public static void StartMeetCommand(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddOtherPlayer(FlatBufferBuilder builder, Offset<PlayerInfo> otherPlayerOffset) { builder.AddOffset(0, otherPlayerOffset.Value, 0); }
  public static Offset<MeetCommand> EndMeetCommand(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MeetCommand>(o);
  }
};

public struct TransferPlayerCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TransferPlayerCommand GetRootAsTransferPlayerCommand(ByteBuffer _bb) { return GetRootAsTransferPlayerCommand(_bb, new TransferPlayerCommand()); }
  public static TransferPlayerCommand GetRootAsTransferPlayerCommand(ByteBuffer _bb, TransferPlayerCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TransferPlayerCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public PlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (PlayerInfo?)(new PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<TransferPlayerCommand> CreateTransferPlayerCommand(FlatBufferBuilder builder,
      Offset<PlayerInfo> playerOffset = default(Offset<PlayerInfo>)) {
    builder.StartObject(1);
    TransferPlayerCommand.AddPlayer(builder, playerOffset);
    return TransferPlayerCommand.EndTransferPlayerCommand(builder);
  }

  public static void StartTransferPlayerCommand(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<PlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static Offset<TransferPlayerCommand> EndTransferPlayerCommand(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TransferPlayerCommand>(o);
  }
};

public struct PlayerInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerInfo GetRootAsPlayerInfo(ByteBuffer _bb) { return GetRootAsPlayerInfo(_bb, new PlayerInfo()); }
  public static PlayerInfo GetRootAsPlayerInfo(ByteBuffer _bb, PlayerInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public Vec3? Pos { get { int o = __p.__offset(8); return o != 0 ? (Vec3?)(new Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public Qua? Rot { get { int o = __p.__offset(10); return o != 0 ? (Qua?)(new Qua()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPlayerInfo(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddPos(FlatBufferBuilder builder, Offset<Vec3> posOffset) { builder.AddStruct(2, posOffset.Value, 0); }
  public static void AddRot(FlatBufferBuilder builder, Offset<Qua> rotOffset) { builder.AddStruct(3, rotOffset.Value, 0); }
  public static Offset<PlayerInfo> EndPlayerInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerInfo>(o);
  }
};

public struct MessageRoot : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MessageRoot GetRootAsMessageRoot(ByteBuffer _bb) { return GetRootAsMessageRoot(_bb, new MessageRoot()); }
  public static MessageRoot GetRootAsMessageRoot(ByteBuffer _bb, MessageRoot obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MessageRoot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Data DataType { get { int o = __p.__offset(4); return o != 0 ? (Data)__p.bb.Get(o + __p.bb_pos) : Data.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<MessageRoot> CreateMessageRoot(FlatBufferBuilder builder,
      Data data_type = Data.NONE,
      int dataOffset = 0) {
    builder.StartObject(2);
    MessageRoot.AddData(builder, dataOffset);
    MessageRoot.AddDataType(builder, data_type);
    return MessageRoot.EndMessageRoot(builder);
  }

  public static void StartMessageRoot(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddDataType(FlatBufferBuilder builder, Data dataType) { builder.AddByte(0, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(1, dataOffset, 0); }
  public static Offset<MessageRoot> EndMessageRoot(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MessageRoot>(o);
  }
  public static void FinishMessageRootBuffer(FlatBufferBuilder builder, Offset<MessageRoot> offset) { builder.Finish(offset.Value); }
};


}
